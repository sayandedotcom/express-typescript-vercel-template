name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
jobs:
  Deploy-Production:
    name: Deploy to Vercel Production Hosting
    runs-on: ubuntu-latest
    outputs:
      production_url: ${{ steps.production-deployment.outputs.production_url }}
    steps:
      - name: Initial Checkout
        uses: actions/checkout@v4.1.7
      - name: Install Typescript Compile Tools
        run: npm install --global tsup typescript
      - name: Compile Typescript
        run: npm run build
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel for Production
        id: production-deployment
        run: |
          production_url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "production_url=$production_url" >> "$GITHUB_OUTPUT"

  Github-Deployment:
    name: Create Github Deployment for Production Environment
    runs-on: ubuntu-latest
    needs: Deploy-Production
    permissions:
      deployments: write
    steps:
      - name: Add Failed Production Deployment
        id: production-deployment-failure
        if: ${{ needs.Deploy-Production.result == 'failure' }}
        uses: chrnorm/deployment-action@v2.0.7
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          initial-status: "failure"
          environment-url: ${{ needs.Deploy-Production.outputs.production_url }}
          environment: production
      - name: Add Successful Production Deployment
        id: production-deployment-success
        if: ${{ needs.Deploy-Production.result == 'success' }}
        uses: chrnorm/deployment-action@v2.0.7
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          initial-status: "success"
          environment-url: ${{ needs.Deploy-Production.outputs.production_url }}
          environment: production
